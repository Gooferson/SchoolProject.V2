@page "/wifis/create/"
@inject HttpClient _client
@inject NavigationManager _navManager

<h3>Wifi Creation</h3>
<hr />
<br />

<EditForm Model="@wifi" OnValidSubmit="CreateWifi">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div class="form-group">
        <label>Wifi Brand: </label>
        <div>
            <InputText @bind-Value="@wifi.WifiBrand" class="form-control" />
            <ValidationMessage For="@(() => wifi.WifiBrand)" />
        </div>
    </div>

    <div class="form-group">
        <label>Wifi Type: </label>
        <div>
            <InputText @bind-Value="@wifi.WifiType" class="form-control" />
            <ValidationMessage For="@(() => wifi.WifiType)" />
        </div>
    </div>

    <div class="form-group">
        <label>Wifi Name: </label>
        <div>
            <InputText @bind-Value="@wifi.WifiName" class="form-control" />
            <ValidationMessage For="@(() => wifi.WifiName)" />
        </div>
    </div>

    <button type="submit" class="btn btn-success btn-block">
        Create Wifi
    </button>

</EditForm>

@code {
    Wifi wifi = new Wifi();

    private async Task CreateWifi()
    {
        await _client.PostAsJsonAsync(Endpoints.WifisEndpoint, wifi);
        _navManager.NavigateTo("/wifis/");
    }
}